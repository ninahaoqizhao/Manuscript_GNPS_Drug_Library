library(tidyverse)
library(readxl)
library(viridis)
library(ComplexHeatmap)
library(circlize)
library(ggplotify)


#####################################################
#### detection frequency plot for drug SUSPECTS  ####
#####################################################

drug_masst <- read.csv("application/drug_in_masst/20240124_druglib_analogoff_match_file_paste_together_python.csv")
drug_masst_filtered <- drug_masst %>% dplyr::select(colnames(drug_masst)[-1]) %>%
  dplyr::filter(!grepl("MSV000084314|MSV000089210", drug_masst$USI))
drug_masst_filtered$short_usi <- sub(":scan.*", "", drug_masst_filtered$USI)
colnames(drug_masst_filtered) <- paste("drug_", colnames(drug_masst_filtered), sep = "")
drug_masst_filtered <- drug_masst_filtered %>% dplyr::select(c("drug_GNPSID", "drug_short_usi"))


suspect_masst <- read.csv("application/drug_in_masst/20240309_drug_suspectlib_masst_match_file_paste_together_python.csv")
suspect_masst_filtered <- suspect_masst %>% dplyr::select(colnames(suspect_masst)[-1]) %>%
  dplyr::filter(!grepl("MSV000084314|MSV000089210", suspect_masst$USI) 
                # & suspect_masst$Cosine >= 0.8
                # & suspect_masst$Matching.Peaks >= 6
                )
suspect_masst_filtered$short_usi <- sub(":scan.*", "", suspect_masst_filtered$USI)
colnames(suspect_masst_filtered) <- paste("suspect_", colnames(suspect_masst_filtered), sep = "")
suspect_masst_filtered <- suspect_masst_filtered %>% dplyr::select(c("suspect_GNPSID", "suspect_short_usi"))

analog_metadata <- read.csv("application/druglib_metadata/20240430_drug_suspect_analoglib_metadata_combined_filtered_FINAL.csv")
analog_metadata_filtered <- analog_metadata %>% dplyr::select(c("analog_ccmsid", "drug_ccmsid", "chemical_source")) %>%
  dplyr::filter(!is.na(analog_metadata$drug_ccmsid))
drug_metadata <- read_xlsx("application/druglib_metadata/20240510_druglib_metadata_simple_R3_DMIM.xlsx")

suspect_masst_metadata <- inner_join(suspect_masst_filtered, analog_metadata_filtered, by = c("suspect_GNPSID" = "analog_ccmsid"))
suspect_masst_metadata_filtered <- suspect_masst_metadata 
# %>% dplyr::filter(!grepl("Low|QAQC", suspect_masst_metadata$chemical_source))



custom_aggregate <- function(x) {
  return(paste(unique(x), collapse = "|"))
}

drug_masst_filename_cat <- drug_masst_filtered %>% 
  group_by(drug_short_usi) %>% 
  summarise_all(custom_aggregate)

suspect_masst_metadata_filtered$parent_check <- rep(FALSE, nrow(suspect_masst_metadata_filtered))

for (i in 1:nrow(suspect_masst_metadata_filtered)){
  if (suspect_masst_metadata_filtered$suspect_short_usi[i] %in% drug_masst_filename_cat$drug_short_usi){
    temp_df <- drug_masst_filename_cat %>% 
      dplyr::filter(drug_masst_filename_cat$drug_short_usi == suspect_masst_metadata_filtered$suspect_short_usi[i])
    if (grepl(suspect_masst_metadata_filtered$drug_ccmsid[i], temp_df$drug_GNPSID)){
      suspect_masst_metadata_filtered$parent_check[i] <- TRUE
    }
  }
}

extract_unique_delta_mass <- function(input_string) {
  delta_mass_values_1 <- str_extract_all(input_string, "(?<=Delta Mass:)-?\\d+\\.\\d+")
  delta_mass_values_2 <- str_extract_all(input_string, "(?<=delta m/z )-?\\d+\\.\\d+")
  all_values <- c(unlist(delta_mass_values_1), unlist(delta_mass_values_2))
  all_values <- as.numeric(all_values)
  all_values <- formatC(round(all_values, 2), format='f', digits=2)
  unique_values <- unique(all_values)
  result <- paste(unique_values, collapse = "|")
  return(result)
}

analog_metadata <- analog_metadata %>%
  mutate(unique_delta_mass = sapply(analog_name, extract_unique_delta_mass))

analog_metadata$unique_delta_mass[grepl("suspect", analog_metadata$chemical_source)] <- paste0("-", analog_metadata$unique_delta_mass[grepl("suspect", analog_metadata$chemical_source)])
analog_metadata$unique_delta_mass <- sub("--", "", analog_metadata$unique_delta_mass)
write.csv(analog_metadata, "application/drug_in_masst/20240711_delta_mass_extracted.csv")


freq_cal <- suspect_masst_metadata_filtered %>% dplyr::select(c("suspect_GNPSID", "parent_check"))
freq_per_suspect <- freq_cal %>%
  group_by(suspect_GNPSID) %>%
  summarize(ratio = sum(parent_check == TRUE) / n())

suspect_masst_final <- freq_per_suspect %>% 
  left_join((analog_metadata %>% dplyr::select(c("analog_ccmsid", "analog_name", "cleanup_name", "Kine_FDA_drug_class", "Kine_broad_disease_area", "Kine_broad_moa", "unique_delta_mass"))), 
            by = c("suspect_GNPSID" = "analog_ccmsid"))

# sum(suspect_masst_final$ratio >0)
# 
# suspect_masst_final_separate <- tidyr::separate_rows(suspect_masst_final, Kine_FDA_drug_class, sep = "\\|")
# 
# suspect_masst_final_filtered <- suspect_masst_final_separate %>% dplyr::filter(!grepl("veterinary|no_match|general anesthetic",suspect_masst_final_separate$Kine_FDA_drug_class)) 
# 
# suspect_class_count <- data.frame(sort(table(suspect_masst_final_filtered$Kine_FDA_drug_class)))
# keep_class <- as.character(suspect_class_count$Var1[suspect_class_count$Freq > 10])
# 
# box_data <- suspect_masst_final_filtered %>% dplyr::filter(suspect_masst_final_filtered$Kine_FDA_drug_class %in% keep_class)
# # write.csv(suspect_masst_final, "application/drug_in_masst/suspect_FDA_class_check.csv")
# 
# delta_count <- data.frame(sort(table(box_data$unique_delta_mass)))
# keep_delta <- as.character(delta_count$Var1[delta_count$Freq > 14])
# 
# box_data$unique_delta_mass[!(box_data$unique_delta_mass %in% keep_delta)] <- "other"
# 
# box_data$unique_delta_mass <- factor(box_data$unique_delta_mass, levels = c("-15.99", "14.02", "18.01", "2.02", "-13.98", "-14.02",
#                                                                             "-176.03", "-31.99", "-29.97", "28.03", "other"))
# # color jitter based on delta masses
# ggplot(box_data, aes(x=reorder(Kine_FDA_drug_class, ratio, FUN = median), y=ratio, color="black")) + 
#   geom_boxplot(outlier.shape=NA, color = "black", linewidth=0.5, fill = "lightgray") + #avoid plotting outliers twice
#   stat_boxplot(geom = "errorbar", width = 0.5, color="black", linewidth=0.5) + 
#   geom_jitter(aes(col = unique_delta_mass), position=position_jitter(width=.1, height=0), size = 2)+
#   scale_color_brewer(palette = "Paired")+
#   theme_classic()+
#   labs(x = NULL, y = "Frequency of shared detection with parent drug") +
#   theme(axis.ticks.length = unit(1, "mm"), 
#         axis.ticks.x.bottom = element_line(linewidth=0.8),
#         axis.ticks.y.left = element_line(linewidth=0.8),
#         axis.line.y.left = element_line(linewidth = 0.8),
#         axis.line.x.bottom=element_line(linewidth=0.8),
#         axis.text.x = element_text(size = 12, angle = 45, hjust = 1, color = "black"),
#         axis.text.y = element_text(size = 12, color = "black"),
#         axis.title = element_text(size = 12))
# 
# # same color for all jitter
# box_data$Kine_FDA_drug_class <- sub(" \\(.*\\)$", "", box_data$Kine_FDA_drug_class)
# box_data$Kine_FDA_drug_class <- reorder(box_data$Kine_FDA_drug_class, box_data$ratio, FUN = median)
# suspect_boxplot <- ggplot(box_data, aes(x=Kine_FDA_drug_class, y=ratio, color="black", fill = Kine_FDA_drug_class)) + 
#   geom_boxplot(outlier.shape=NA, color = "black", linewidth=0.5) +
#   scale_fill_viridis(discrete = TRUE, begin = 0.2, end = 1)+
#   stat_boxplot(geom = "errorbar", width = 0.5, color="black", linewidth=0.5) + 
#   geom_jitter(position=position_jitter(width=.1, height=0), shape = 21, col = "black", fill = "lightgray", size = 2)+
#   theme_classic()+
#   labs(x = NULL, y = "Frequency of shared detection with parent drug") +
#   theme(axis.ticks.length = unit(1, "mm"), 
#         axis.ticks.x.bottom = element_line(linewidth=0.8),
#         axis.ticks.y.left = element_line(linewidth=0.8),
#         axis.line.y.left = element_line(linewidth = 0.8),
#         axis.line.x.bottom=element_line(linewidth=0.8),
#         axis.text.x = element_text(size = 12, angle = 90, hjust = 1, color = "black"),
#         axis.text.y = element_text(size = 12, color = "black"),
#         axis.title = element_text(size = 12),
#         legend.position = "right")
# suspect_boxplot
# ggsave(file="suspect_masst_boxplot_legend.svg", plot=suspect_boxplot, width=10, height=12)
# 
# # multiple plots based on delta mass
# suspect_delta_count <- data.frame(sort(table(suspect_masst_final$unique_delta_mass)))
# suspect_to_plot <- as.character(suspect_delta_count$Var1[suspect_delta_count$Freq > 20])
# 
# box_data_delta <- suspect_masst_final %>% dplyr::filter(suspect_masst_final$unique_delta_mass %in% suspect_to_plot &
#                                                           suspect_masst_final$Kine_FDA_drug_class != "no_match")
# 
# for (i in 1:11){
# box_data_temp <- box_data_delta %>% dplyr::filter(box_data_delta$unique_delta_mass == suspect_to_plot[i])
# class_count <- data.frame(sort(table(box_data_temp$Kine_FDA_drug_class)))
# keep_class <- as.character(class_count$Var1[class_count$Freq > 2])
# box_data_temp <- box_data_temp %>% dplyr::filter(box_data_temp$Kine_FDA_drug_class %in% keep_class)
# 
# plot_temp <- ggplot(box_data_temp, aes(x=reorder(Kine_FDA_drug_class, ratio, FUN = median), y=ratio, color="black", fill = Kine_FDA_drug_class)) + 
#     geom_boxplot(outlier.shape=NA, color = "black", linewidth=0.5) + #avoid plotting outliers twice
#     stat_boxplot(geom = "errorbar", width = 0.5, color="black", linewidth=0.5) + 
#     geom_jitter(position=position_jitter(width=.1, height=0), size = 2, col = "black", fill = "gray", alpha = 0.5)+
#     theme_classic()+
#     labs(title = suspect_to_plot[i], x = NULL, y = "Frequency of shared detection with parent drug") +
#     theme(axis.ticks.length = unit(1, "mm"), 
#           axis.ticks.x.bottom = element_line(linewidth=0.8),
#           axis.ticks.y.left = element_line(linewidth=0.8),
#           axis.line.y.left = element_line(size = 0.8),
#           axis.line.x.bottom=element_line(linewidth=0.8),
#           axis.text.x = element_text(size = 12, angle = 45, hjust = 1, color = "black"),
#           axis.text.y = element_text(size = 12, color = "black"),
#           axis.title = element_text(size = 12),
#           legend.position = "none")
# print(plot_temp)
# }



#####################################################
#### detection frequency plot for drug ANALOGS  ####
#####################################################

drug_masst <- read.csv("application/drug_in_masst/20240124_druglib_analogoff_match_file_paste_together_python.csv")
drug_masst_filtered <- drug_masst %>% dplyr::select(colnames(drug_masst)[-1]) %>%
  dplyr::filter(!grepl("MSV000084314|MSV000089210", drug_masst$USI))
drug_masst_filtered$short_usi <- sub(":scan.*", "", drug_masst_filtered$USI)
colnames(drug_masst_filtered) <- paste("drug_", colnames(drug_masst_filtered), sep = "")
drug_masst_filtered <- drug_masst_filtered %>% dplyr::select(c("drug_GNPSID", "drug_short_usi"))


analog_masst <- read.csv("application/drug_in_masst/20240305_drug_analoglib_masst_match_file_paste_together_python.csv")
analog_masst_filtered <- analog_masst %>% dplyr::select(colnames(analog_masst)[-1]) %>%
  dplyr::filter(!grepl("MSV000084314|MSV000089210", analog_masst$USI) 
                # & analog_masst$Cosine >= 0.8
                # & analog_masst$Matching.Peaks >= 6
                )
analog_masst_filtered$short_usi <- sub(":scan.*", "", analog_masst_filtered$USI)
colnames(analog_masst_filtered) <- paste("analog_", colnames(analog_masst_filtered), sep = "")
analog_masst_filtered <- analog_masst_filtered %>% dplyr::select(c("analog_GNPSID", "analog_short_usi"))

analog_metadata <- read.csv("application/druglib_metadata/20240430_drug_suspect_analoglib_metadata_combined_filtered_FINAL.csv")
analog_metadata_filtered <- analog_metadata %>% dplyr::select(c("analog_ccmsid", "drug_ccmsid", "chemical_source")) %>%
  dplyr::filter(!is.na(analog_metadata$drug_ccmsid))

analog_masst_metadata <- inner_join(analog_masst_filtered, analog_metadata_filtered, by = c("analog_GNPSID" = "analog_ccmsid"))
analog_masst_metadata_filtered <- analog_masst_metadata 
# %>% dplyr::filter(!grepl("Low|QAQC", analog_masst_metadata$chemical_source))

custom_aggregate <- function(x) {
  return(paste(unique(x), collapse = "|"))
}

drug_masst_filename_cat <- drug_masst_filtered %>% 
  group_by(drug_short_usi) %>% 
  summarise_all(custom_aggregate)

analog_masst_metadata_filtered$parent_check <- rep(FALSE, nrow(analog_masst_metadata_filtered))

for (i in 1:nrow(analog_masst_metadata_filtered)){
  if (analog_masst_metadata_filtered$analog_short_usi[i] %in% drug_masst_filename_cat$drug_short_usi){
    temp_df <- drug_masst_filename_cat %>% 
      dplyr::filter(drug_masst_filename_cat$drug_short_usi == analog_masst_metadata_filtered$analog_short_usi[i])
    if (grepl(analog_masst_metadata_filtered$drug_ccmsid[i], temp_df$drug_GNPSID)){
      analog_masst_metadata_filtered$parent_check[i] <- TRUE
    }
  }
}

extract_unique_delta_mass <- function(input_string) {
  delta_mass_values_1 <- str_extract_all(input_string, "(?<=Delta Mass:)-?\\d+\\.\\d+")
  delta_mass_values_2 <- str_extract_all(input_string, "(?<=delta m/z )-?\\d+\\.\\d+")
  all_values <- c(unlist(delta_mass_values_1), unlist(delta_mass_values_2))
  all_values <- as.numeric(all_values)
  all_values <- formatC(round(all_values, 2), format='f', digits=2)
  unique_values <- unique(all_values)
  result <- paste(unique_values, collapse = "|")
  return(result)
}

analog_metadata <- analog_metadata %>%
  mutate(unique_delta_mass = sapply(analog_name, extract_unique_delta_mass))

analog_metadata$unique_delta_mass[grepl("suspect", analog_metadata$chemical_source)] <- paste0("-", analog_metadata$unique_delta_mass[grepl("suspect", analog_metadata$chemical_source)])
analog_metadata$unique_delta_mass <- sub("--", "", analog_metadata$unique_delta_mass)

freq_cal <- analog_masst_metadata_filtered %>% dplyr::select(c("analog_GNPSID", "parent_check"))
freq_per_analog <- freq_cal %>%
  group_by(analog_GNPSID) %>%
  summarize(ratio = sum(parent_check == TRUE) / n())

analog_masst_final <- freq_per_analog %>% 
  left_join((analog_metadata %>% dplyr::select(c("analog_ccmsid", "analog_name", "cleanup_name", "Kine_FDA_drug_class", "Kine_broad_disease_area", "Kine_broad_moa", "unique_delta_mass"))), 
            by = c("analog_GNPSID" = "analog_ccmsid"))

colnames(suspect_masst_final) <- colnames(analog_masst_final)
masst_final_no_filter <- rbind(analog_masst_final, suspect_masst_final)
write.csv(masst_final_no_filter, "application/drug_in_masst/20240705_masst_no_filter_ratio_check.csv")


sum(analog_masst_final$ratio>0)
write.csv(analog_masst_final, "application/drug_in_masst/analog_FDA_class_check.csv")


analog_masst_final_separate <- tidyr::separate_rows(analog_masst_final, Kine_FDA_drug_class, sep = "\\|")

analog_masst_final_filtered <- analog_masst_final_separate %>% 
  dplyr::filter(!grepl("veterinary|no_match|corticosteroid|androstan|progestin|vitamin|aldosterone|estrogen|prostaglandin|various",
                       analog_masst_final_separate$Kine_FDA_drug_class)) 

analog_class_count <- data.frame(sort(table(analog_masst_final_filtered$Kine_FDA_drug_class)))
keep_class <- as.character(analog_class_count$Var1[analog_class_count$Freq > 10])

box_data <- analog_masst_final_filtered %>% dplyr::filter(analog_masst_final_filtered$Kine_FDA_drug_class %in% keep_class)

delta_count <- data.frame(sort(table(box_data$unique_delta_mass)))
keep_delta <- as.character(delta_count$Var1[delta_count$Freq > 10])

box_data$unique_delta_mass[!(box_data$unique_delta_mass %in% keep_delta)] <- "other"

box_data$unique_delta_mass <- factor(box_data$unique_delta_mass, levels = c("14.02", "-16.03", "-1.00", "28.03", "-14.02",
                                                                            "-14.96", "-17.03", "17.03", "-1.98", "-15.99", "other"))
# color jitter based on delta masses
ggplot(box_data, aes(x=reorder(Kine_FDA_drug_class, ratio, FUN = median), y=ratio, color="black")) + 
  geom_boxplot(outlier.shape=NA, color = "black", linewidth=0.5, fill = "lightgray") + #avoid plotting outliers twice
  stat_boxplot(geom = "errorbar", width = 0.5, color="black", linewidth=0.5) + 
  geom_jitter(aes(col = unique_delta_mass), position=position_jitter(width=.1, height=0), size = 2)+
  scale_color_brewer(palette = "Paired")+
  theme_classic()+
  labs(x = NULL, y = "Frequency of shared detection with parent drug") +
  theme(axis.ticks.length = unit(1, "mm"), 
        axis.ticks.x.bottom = element_line(linewidth=0.8),
        axis.ticks.y.left = element_line(linewidth=0.8),
        axis.line.y.left = element_line(linewidth = 0.8),
        axis.line.x.bottom=element_line(linewidth=0.8),
        axis.text.x = element_text(size = 12, angle = 45, hjust = 1, color = "black"),
        axis.text.y = element_text(size = 12, color = "black"),
        axis.title = element_text(size = 12))

# same color for all jitter
box_data$Kine_FDA_drug_class <- sub(" \\(.*\\)$", "", box_data$Kine_FDA_drug_class)
box_data$Kine_FDA_drug_class <- reorder(box_data$Kine_FDA_drug_class, box_data$ratio, FUN = median)
analog_boxplot <- ggplot(box_data, aes(x=Kine_FDA_drug_class, y=ratio, color="black", fill = Kine_FDA_drug_class)) + 
  geom_boxplot(outlier.shape=NA, color = "black", linewidth=0.5) +
  scale_fill_viridis(discrete = TRUE, begin = 0.2, end = 1)+
  stat_boxplot(geom = "errorbar", width = 0.5, color="black", linewidth=0.5) + 
  geom_jitter(position=position_jitter(width=.1, height=0), shape = 21, col = "black", fill = "lightgray", size = 2)+
  theme_classic()+
  labs(x = NULL, y = "Frequency of shared detection with parent drug") +
  theme(axis.ticks.length = unit(1, "mm"), 
        axis.ticks.x.bottom = element_line(linewidth=0.8),
        axis.ticks.y.left = element_line(linewidth=0.8),
        axis.line.y.left = element_line(linewidth = 0.8),
        axis.line.x.bottom=element_line(linewidth=0.8),
        axis.text.x = element_text(size = 12, angle = 90, hjust = 1, color = "black"),
        axis.text.y = element_text(size = 12, color = "black"),
        axis.title = element_text(size = 12),
        legend.position = "right")
analog_boxplot
ggsave(file="analog_masst_boxplot_legend.svg", plot=analog_boxplot, width=10, height=10)

# multiple plots based on delta mass
analog_delta_count <- data.frame(sort(table(analog_masst_final$unique_delta_mass)))
analog_to_plot <- as.character(analog_delta_count$Var1[analog_delta_count$Freq > 20])

box_data_delta <- analog_masst_final %>% dplyr::filter(analog_masst_final$unique_delta_mass %in% analog_to_plot &
                                                          analog_masst_final$Kine_FDA_drug_class != "no_match")

for (i in 1:11){
  box_data_temp <- box_data_delta %>% dplyr::filter(box_data_delta$unique_delta_mass == analog_to_plot[i])
  class_count <- data.frame(sort(table(box_data_temp$Kine_FDA_drug_class)))
  keep_class <- as.character(class_count$Var1[class_count$Freq > 2])
  box_data_temp <- box_data_temp %>% dplyr::filter(box_data_temp$Kine_FDA_drug_class %in% keep_class)
  
  plot_temp <- ggplot(box_data_temp, aes(x=reorder(Kine_FDA_drug_class, ratio, FUN = median), y=ratio, color="black", fill = Kine_FDA_drug_class)) + 
    geom_boxplot(outlier.shape=NA, color = "black", linewidth=0.5) + #avoid plotting outliers twice
    stat_boxplot(geom = "errorbar", width = 0.5, color="black", linewidth=0.5) + 
    geom_jitter(position=position_jitter(width=.1, height=0), size = 2, col = "black", fill = "gray", alpha = 0.5)+
    theme_classic()+
    labs(title = analog_to_plot[i], x = NULL, y = "Frequency of shared detection with parent drug") +
    theme(axis.ticks.length = unit(1, "mm"), 
          axis.ticks.x.bottom = element_line(linewidth=0.8),
          axis.ticks.y.left = element_line(linewidth=0.8),
          axis.line.y.left = element_line(size = 0.8),
          axis.line.x.bottom=element_line(linewidth=0.8),
          axis.text.x = element_text(size = 12, angle = 45, hjust = 1, color = "black"),
          axis.text.y = element_text(size = 12, color = "black"),
          axis.title = element_text(size = 12),
          legend.position = "none")
  print(plot_temp)
}

##################################################################
# table for cleaned delta mass and detection and delta mass plot #
##################################################################
cleaned_delta <- read.csv("application/drug_in_masst/20240711_delta_mass_cleaned_with_detection_ratio.csv")
negate_values <- function(x) {
  values <- strsplit(x, "\\|")[[1]]
  negated_values <- as.numeric(values) * -1
  negated_string <- paste(negated_values, collapse = "|")
  return(negated_string)
}
cleaned_delta$cleaned_delta_mass <- sapply(cleaned_delta$cleaned_delta_mass, negate_values)
cleaned_delta_separate <- tidyr::separate_rows(cleaned_delta, cleaned_delta_mass, sep = "\\|")
result <- as.data.frame(table(cleaned_delta_separate$cleaned_delta_mass))
colnames(result) <- c("delta_mass", "freq")
result$masst_detection <- rep(NA, nrow(result))
for(i in result$delta_mass){
  temp <- cleaned_delta_separate %>% dplyr::filter(cleaned_delta_separate$cleaned_delta_mass == i)
  result$masst_detection[result$delta_mass == i] <- sum(temp$masst_detection_ratio > 0)
}
result$detection_freq <- result$masst_detection/result$freq
write.csv(result, "application/drug_in_masst/20240711_analog_masst_detection_freq_by_delta_mass.csv")

# delta mass frequency visualization
result$atom <- rep("unknown",nrow(result))

#explain: freq vs delta mass plot
result$atom[result$delta_mass == -15.99 | result$delta_mass == 15.99] <- "1O" 
result$atom[result$delta_mass == 14.02 | result$delta_mass == -14.02] <- "1C, 2H" 
result$atom[result$delta_mass == 1] <- "C isotope" 
result$atom[result$delta_mass == 2] <- "O/S/Cl/Br isotope" 
result$atom[result$delta_mass == 28.03 | result$delta_mass == -28.03] <- "2C, 4H" 
result$atom[result$delta_mass == 18.01 | result$delta_mass == -18.01] <- "1O, 2H" 
result$atom[result$delta_mass == 27.99 | result$delta_mass == -27.99] <- "1C, 1O" 
result$atom[result$delta_mass == 2.02 | result$delta_mass == -2.02] <- "2H" 



result$atom <- factor(result$atom, levels = c("1O", "1C, 2H", "C isotope", "O/S/Cl/Br isotope", "2C, 4H", "1O, 2H","1C, 1O","2H","unknown"))
result$delta_mass <- as.numeric(as.character(result$delta_mass))
class(result$delta_mass)

plot <- ggplot(result, aes(x=delta_mass, weight=freq, fill = atom)) +
  geom_histogram(binwidth = 1, boundary = 0.5, color = "white", size = 0.5) +
  scale_fill_manual(values = c("darkred", "#339933", "#0066CC", "#66cccc", "orange", "pink",
                               "#330066", "#9999CC", "black")) + 
  xlab("Delta mass") +
  ylab("Spectra number") +
  scale_x_continuous(limits = c(-100, 100), breaks = c(-100, -50, 0, 50, 100))+
  scale_y_continuous(limits = c(0, 420), breaks = c(0, 100, 200, 300, 400), expand = c(0, 0))+
  theme_classic() +
  theme(axis.ticks.length=unit(.25, "cm"),
        axis.line.x.bottom=element_line(size=1.2), axis.line.y.left = element_line(size=1.2),
        axis.ticks.x.bottom = element_line(size=1.2), axis.ticks.y.left = element_line(size=1.2),
        axis.text.y.left = element_text(size = 20), axis.text.x.bottom = element_text(size = 20),
        axis.title = element_text(size = 20),
        legend.text = element_text(size = 20),
        legend.position = c(1, 0.7),  # Align legend to the right edge of the plot area
        legend.justification = c(1, 0.5),
        legend.title = element_blank(),  # Remove legend title
        plot.margin = margin(5.5, 5.5, 5.5, 5.5))

ggsave(plot = plot, file = "suspect_delta_mass_5.svg", width = 10, height = 6)

# test unique delta in different drug groups
cleaned_delta_filtered <- cleaned_delta %>% dplyr::filter(cleaned_delta$Kine_FDA_drug_class != "no_match" &
                                                            !grepl("QAQC|Low", cleaned_delta$chemical_source))
result <- cleaned_delta_filtered %>%
  group_by(Kine_FDA_drug_class, cleaned_delta_mass) %>%
  summarise(count = n()) %>%
  ungroup()

##################################
#### drug masst disease class ####
##################################
drug_masst <- read.csv("application/drug_in_masst/20240124_druglib_analogoff_match_file_paste_together_python.csv")
drug_masst_filtered <- drug_masst %>% dplyr::select(colnames(drug_masst)[-1]) %>%
  dplyr::filter(!grepl("MSV000084314|MSV000089210", drug_masst$USI)
                & drug_masst$Cosine >= 0.8
                & drug_masst$Matching.Peaks >= 6
                & drug_masst$Delta.Mass == 0.00) %>%
  dplyr::select(c("USI", "GNPSID"))
drug_masst_filtered$short_usi <- sub(":scan.*", "", drug_masst_filtered$USI)
drug_masst_filtered <- drug_masst_filtered[,c("short_usi", "GNPSID")]
colnames(drug_masst_filtered) <- c("short_usi", "drug_GNPSID")
rm(drug_masst)

redu <- read.csv("application/drug_in_masst/all_redu_sample_information.tsv", sep = "\t")
redu_homo <- redu %>% dplyr::filter(grepl("Homo", NCBITaxonomy))
length(unique(redu_homo$ATTRIBUTE_DatasetAccession))

unique(redu_homo_disease$DOIDCommonName)
redu_homo_disease <- redu_homo %>% dplyr::filter(DOIDCommonName != "missing value")
length(unique(redu_homo_disease$ATTRIBUTE_DatasetAccession))


redu_gnps <- redu %>% dplyr::filter(redu$DataSource == "GNPS")
rm(redu)
extract_parts <- function(x) {
  part1 <- str_extract(x, ".*:")
  part2 <- str_extract(x, "(?<=/)[^/]+(?=\\.)")
  result <- paste0(part1, part2)
  return(result)
}
redu_gnps_short_usi <- redu_gnps %>% mutate(short_usi = sapply(USI, extract_parts))
redu_human_disease <- redu_gnps_short_usi %>% dplyr::filter(grepl("Homo", redu_gnps_short_usi$NCBITaxonomy) & redu_gnps_short_usi$DOIDCommonName != "missing value")
redu_human_disease_filtered <- redu_human_disease %>% dplyr::select(c("short_usi", "DOIDCommonName", "UBERONBodyPartName"))
redu_human_disease_filtered$disease_bodypart <- paste0(redu_human_disease_filtered$DOIDCommonName, " | ", redu_human_disease_filtered$UBERONBodyPartName) 

drug_masst_disease_redu <- drug_masst_filtered %>% inner_join(redu_human_disease_filtered, by = "short_usi")

drug_metadata <- read_xlsx("application/druglib_metadata/20240510_druglib_metadata_simple_R3_DMIM.xlsx")
drug_metadata_nodup <- drug_metadata[!duplicated(drug_metadata$gnps_libid),]
drug_human_disease_metadata <- drug_masst_disease_redu %>% left_join(drug_metadata_nodup, by = c("drug_GNPSID" = "gnps_libid"))
drug_human_disease_metadata_filtered <- drug_human_disease_metadata %>%
  dplyr::filter(!grepl("QAQC|Low|Endoge|Food|Personal Care|Industrial", drug_human_disease_metadata$chemical_source)
                & !grepl("NA|no_match", drug_human_disease_metadata$Kine_broad_disease_area)
                & drug_human_disease_metadata$smiles != "N/A")

# temp_infectious <- drug_human_disease_metadata_filtered %>% dplyr::filter(grepl("infectious",drug_human_disease_metadata_filtered$Kine_broad_disease_area))
drug_human_disease_metadata_filtered$Kine_broad_disease_area[grepl("HIV|influenza|nucleoside", drug_human_disease_metadata_filtered$Kine_FDA_drug_class)] <- "antivirals"
drug_human_disease_metadata_filtered$Kine_broad_disease_area[grepl("antifungal", drug_human_disease_metadata_filtered$Kine_FDA_drug_class)] <- "antifungals"
drug_human_disease_metadata_filtered$Kine_broad_disease_area[grepl("antimalarial", drug_human_disease_metadata_filtered$Kine_FDA_drug_class)] <- "anti-parasite|cardiology"
drug_human_disease_metadata_filtered$Kine_broad_disease_area[drug_human_disease_metadata_filtered$Kine_broad_disease_area == "dental|infectious disease"] <- "antiseptic and disinfectant"
drug_human_disease_metadata_filtered$Kine_broad_disease_area[grepl("sulfone|antimicrobial|antibac|tetracycline", drug_human_disease_metadata_filtered$Kine_FDA_drug_class)] <- "antibiotics"
drug_human_disease_metadata_filtered$Kine_broad_disease_area[grepl("parasite|leishmaniasis", drug_human_disease_metadata_filtered$Kine_broad_indication)] <- "anti-parasites"

a <- unique(drug_human_disease_metadata_filtered$Kine_broad_disease_area)
b <- strsplit(a, "\\|")
c <- unlist(b)
unique_disease_area <- unique(c)

drug_area_separate <- tidyr::separate_rows(drug_human_disease_metadata_filtered, Kine_broad_disease_area, sep = "\\|")
custom_aggregate <- function(x) {
  return(paste(unique(x), collapse = "|"))
}
drug_usi_aggregate <- drug_area_separate %>%
  group_by(short_usi) %>%
  summarise_all(custom_aggregate)

result <- data.frame(matrix(FALSE, nrow = 741, ncol = 26))
colnames(result) <- unique_disease_area
rownames(result) <- drug_usi_aggregate$short_usi

for(i in 1:nrow(result)){
  for (j in 1:ncol(result)){
    if(grepl(unique_disease_area[j], drug_usi_aggregate$Kine_broad_disease_area[drug_usi_aggregate$short_usi == rownames(result)[i]], fixed = TRUE)){
      result[i,j] <- TRUE
    }
  }
}

result_filtered <- result %>% rownames_to_column("short_usi") %>% left_join(drug_usi_aggregate %>% dplyr::select(c("short_usi", "disease_bodypart")), by = "short_usi")
result_detection_per_area <- result_filtered %>%
  dplyr::select(-"short_usi") %>%
  group_by(disease_bodypart) %>%
  summarize(across(everything(), ~ sum(. == TRUE), .names = "ratio_{col}")) %>%
  column_to_rownames("disease_bodypart")

sample_number <- as.data.frame(table(redu_human_disease_filtered$disease_bodypart))
result_freq <- result_detection_per_area
for(i in 1:nrow(result_detection_per_area)){
  result_freq[i,] <- result_detection_per_area[i,]/(sample_number$Freq[sample_number$Var1 == rownames(result_detection_per_area)[i]])
}

a <- apply(result_freq, 2, function(column) any(column > 0.1))
sum(a)
result_freq_filtered <- result_freq[,a]


library(pheatmap)
pheatmap(result_freq_filtered, cluster_rows =  F)





# # based on FDA class
# drug_human_disease_metadata <- drug_masst_disease_redu %>% left_join(drug_metadata_nodup, by = c("drug_GNPSID" = "gnps_libid"))
# drug_human_disease_metadata_filtered <- drug_human_disease_metadata %>%
#   dplyr::filter(!grepl("QAQC|Low|Endoge|Food", drug_human_disease_metadata$chemical_source)
#                 & !grepl("NA|no_match", drug_human_disease_metadata$Kine_FDA_drug_class)
#                 & drug_human_disease_metadata$smiles != "N/A")
# 
# a <- unique(drug_human_disease_metadata_filtered$Kine_FDA_drug_class)
# b <- strsplit(a, "\\|")
# c <- unlist(b)
# unique_FDA_class <- unique(c)
# 
# drug_FDA_separate <- tidyr::separate_rows(drug_human_disease_metadata_filtered, Kine_FDA_drug_class, sep = "\\|")
# custom_aggregate <- function(x) {
#   return(paste(unique(x), collapse = "|"))
# }
# drug_usi_aggregate <- drug_FDA_separate %>%
#   group_by(short_usi) %>%
#   summarise_all(custom_aggregate)
# 
# result <- data.frame(matrix(FALSE, nrow = 748, ncol = 87))
# colnames(result) <- unique_FDA_class
# rownames(result) <- drug_usi_aggregate$short_usi
# 
# for(i in 1:nrow(result)){
#   for (j in 1:ncol(result)){
#     if(grepl(unique_FDA_class[j], drug_usi_aggregate$Kine_FDA_drug_class[drug_usi_aggregate$short_usi == rownames(result)[i]], fixed = T)){
#       result[i,j] <- TRUE
#     }
#   }
# }
# 
# result_filtered <- result %>% rownames_to_column("short_usi") %>% left_join(drug_usi_aggregate %>% dplyr::select(c("short_usi", "disease_bodypart")), by = "short_usi")
# result_freq_per_FDA <- result_filtered %>%
#   dplyr::select(-"short_usi") %>%
#   group_by(disease_bodypart) %>%
#   summarize(across(everything(), ~ sum(. == TRUE) / n(), .names = "ratio_{col}")) %>%
#   column_to_rownames("disease_bodypart")
# 
# a <- apply(result_freq_per_FDA, 2, function(column) any(column > 0.2))
# sum(a)
# result_freq_FDA_filtered <- result_freq_per_FDA[,a]
# 
# library(pheatmap)
# pheatmap(result_freq_FDA_filtered)





# with analogs
drug_masst <- read.csv("application/drug_in_masst/20240124_druglib_analogoff_match_file_paste_together_python.csv")
suspect_masst <- read.csv("application/drug_in_masst/20240309_drug_suspectlib_masst_match_file_paste_together_python.csv")
analog_masst <- read.csv("application/drug_in_masst/20240305_drug_analoglib_masst_match_file_paste_together_python.csv")
drug_masst <- rbind(drug_masst, suspect_masst)
drug_masst <- rbind(drug_masst, analog_masst)

drug_masst_filtered <- drug_masst %>% dplyr::select(colnames(drug_masst)[-1]) %>%
  dplyr::filter(!grepl("MSV000084314|MSV000089210", drug_masst$USI)
                & drug_masst$Cosine >= 0.8
                & drug_masst$Matching.Peaks >= 6
                & drug_masst$Delta.Mass == 0.00) %>%
  dplyr::select(c("USI", "GNPSID"))
drug_masst_filtered$short_usi <- sub(":scan.*", "", drug_masst_filtered$USI)
drug_masst_filtered <- drug_masst_filtered[,c("short_usi", "GNPSID")]
colnames(drug_masst_filtered) <- c("short_usi", "drug_GNPSID")
rm(drug_masst)

redu <- read.csv("application/drug_in_masst/all_redu_sample_information.tsv", sep = "\t")
redu_gnps <- redu %>% dplyr::filter(redu$DataSource == "GNPS")
rm(redu)
extract_parts <- function(x) {
  part1 <- str_extract(x, ".*:")
  part2 <- str_extract(x, "(?<=/)[^/]+(?=\\.)")
  result <- paste0(part1, part2)
  return(result)
}
redu_gnps_short_usi <- redu_gnps %>% mutate(short_usi = sapply(USI, extract_parts))
redu_human_disease <- redu_gnps_short_usi %>% dplyr::filter(grepl("Homo", redu_gnps_short_usi$NCBITaxonomy) & redu_gnps_short_usi$DOIDCommonName != "missing value")
redu_human_disease_filtered <- redu_human_disease %>% dplyr::select(c("short_usi", "DOIDCommonName", "UBERONBodyPartName"))
redu_human_disease_filtered$disease_bodypart <- paste0(redu_human_disease_filtered$DOIDCommonName, " | ", redu_human_disease_filtered$UBERONBodyPartName) 

drug_masst_disease_redu <- drug_masst_filtered %>% inner_join(redu_human_disease_filtered, by = "short_usi")

rosmap <- drug_masst_filtered %>% dplyr::filter(grepl("MSV000086415", short_usi) &
                                                  !grepl("Blank|Std", short_usi))
rosmap$DOIDCommonName <- "Alzheimer's disease"
rosmap$UBERONBodyPartName <- "brain"
rosmap$disease_bodypart <- "Alzheimer's disease | brain"
drug_masst_disease_redu <- rbind(drug_masst_disease_redu, rosmap)


mind <- drug_masst_filtered %>% dplyr::filter(grepl("MSV000088646", short_usi) &
                                                  !grepl("Blank|QC", short_usi))
mind$DOIDCommonName <- "Alzheimer's disease"
mind$UBERONBodyPartName <- "feces"
mind$disease_bodypart <- "Alzheimer's disease | feces"
drug_masst_disease_redu <- rbind(drug_masst_disease_redu, mind)

Stanford_ADRC <- drug_masst_filtered %>% dplyr::filter(grepl("MSV000088640", short_usi) &
                                                 !grepl("Blank|QC", short_usi))
Stanford_ADRC$DOIDCommonName <- "Alzheimer's disease"
Stanford_ADRC$UBERONBodyPartName <- "feces"
Stanford_ADRC$disease_bodypart <- "Alzheimer's disease | feces"
drug_masst_disease_redu <- rbind(drug_masst_disease_redu, Stanford_ADRC)

ADNI <- drug_masst_filtered %>% dplyr::filter(grepl("MSV000086270", short_usi) &
                                                         !grepl("Blank|QC", short_usi))
ADNI$DOIDCommonName <- "Alzheimer's disease"
ADNI$UBERONBodyPartName <- "plasma"
ADNI$disease_bodypart <- "Alzheimer's disease | blood plasma"
drug_masst_disease_redu <- rbind(drug_masst_disease_redu, ADNI)


drug_metadata <- read_xlsx("application/druglib_metadata/20240510_druglib_metadata_simple_R3_DMIM.xlsx")
analog_metadata <- read.csv("application/druglib_metadata/20240430_drug_suspect_analoglib_metadata_combined_filtered_FINAL.csv")
drug_metadata_nodup <- drug_metadata[!duplicated(drug_metadata$gnps_libid),]
drug_metadata_selected <- drug_metadata_nodup %>% dplyr::select(c("gnps_libid", "cleanup_name", "chemical_source", "Kine_FDA_drug_class",
                                                            "Kine_broad_disease_area", "Kine_broad_indication", "Kine_broad_moa"))
analog_metadata_selected <- analog_metadata %>% dplyr::select(c("analog_ccmsid", "analog_name", "chemical_source", "Kine_FDA_drug_class",
                                                                "Kine_broad_disease_area", "Kine_broad_indication", "Kine_broad_moa"))
colnames(analog_metadata_selected) <- colnames(drug_metadata_selected)
drug_metadata_selected <- rbind(drug_metadata_selected, analog_metadata_selected)

drug_human_disease_metadata <- drug_masst_disease_redu %>% left_join(drug_metadata_selected, by = c("drug_GNPSID" = "gnps_libid"))

drug_human_disease_metadata_filtered <- drug_human_disease_metadata %>%
  dplyr::filter(!grepl("QAQC|Low|Endoge|Food|Personal|Industrial", drug_human_disease_metadata$chemical_source)
                & !grepl("NA|no_match", drug_human_disease_metadata$Kine_broad_disease_area)
                & !is.na(drug_human_disease_metadata$Kine_broad_disease_area))

# temp_infectious <- drug_human_disease_metadata_filtered %>% dplyr::filter(grepl("infectious",drug_human_disease_metadata_filtered$Kine_broad_disease_area))
drug_human_disease_metadata_filtered$Kine_broad_disease_area[grepl("HIV|influenza|nucleoside", drug_human_disease_metadata_filtered$Kine_FDA_drug_class)] <- "antivirals"
drug_human_disease_metadata_filtered$Kine_broad_disease_area[grepl("antifungal", drug_human_disease_metadata_filtered$Kine_FDA_drug_class)] <- "antifungals"
drug_human_disease_metadata_filtered$Kine_broad_disease_area[grepl("cardiology", drug_human_disease_metadata_filtered$Kine_broad_disease_area)] <- "cardiology"
drug_human_disease_metadata_filtered$Kine_broad_disease_area[grepl("antimalarial", drug_human_disease_metadata_filtered$Kine_FDA_drug_class)] <- "anti-parasite|cardiology"
drug_human_disease_metadata_filtered$Kine_broad_disease_area[drug_human_disease_metadata_filtered$Kine_broad_disease_area == "dental|infectious disease"] <- "antiseptic and disinfectant"
drug_human_disease_metadata_filtered$Kine_broad_disease_area[grepl("sulfone|antimicrobial|antibac|tetracycline", drug_human_disease_metadata_filtered$Kine_FDA_drug_class)] <- "antibiotics"
drug_human_disease_metadata_filtered$Kine_broad_disease_area[grepl("parasite|leishmaniasis", drug_human_disease_metadata_filtered$Kine_broad_indication)] <- "anti-parasites"
drug_human_disease_metadata_filtered$Kine_broad_disease_area[grepl("corticosteroid", drug_human_disease_metadata_filtered$Kine_FDA_drug_class)] <- "corticosteroids"
drug_human_disease_metadata_filtered$Kine_broad_disease_area[grepl("anesthetic", drug_human_disease_metadata_filtered$Kine_broad_indication)] <- "neurology/psychiatry"

drug_human_disease_metadata_filtered$Kine_broad_disease_area[grepl("depression", drug_human_disease_metadata_filtered$Kine_broad_indication)] <- "antidepressants"
drug_human_disease_metadata_filtered$Kine_broad_disease_area[grepl("Alzheimer|dementia", drug_human_disease_metadata_filtered$Kine_broad_indication)] <- "dementia"
drug_human_disease_metadata_filtered$Kine_broad_disease_area <- gsub("neurology/psychiatry", "other neurology/psychiatry", drug_human_disease_metadata_filtered$Kine_broad_disease_area)
drug_human_disease_metadata_filtered$Kine_broad_disease_area[drug_human_disease_metadata_filtered$Kine_broad_disease_area == "gastroenterology|other neurology/psychiatry"] <- "cannabinoid"
drug_human_disease_metadata_filtered$Kine_broad_disease_area[drug_human_disease_metadata_filtered$Kine_broad_disease_area == "other neurology/psychiatry|rheumatology"] <- "nonsteroidal anti-inflammatory drug"


# t <- as.data.frame(table(drug_human_disease_metadata_filtered$Kine_broad_disease_area))
# 
# 
# a <- unique(drug_human_disease_metadata_filtered$Kine_broad_disease_area)
# b <- strsplit(a, "\\|")
# c <- unlist(b)
# unique_disease_area <- unique(c)
# 
# drug_area_separate <- tidyr::separate_rows(drug_human_disease_metadata_filtered, Kine_broad_disease_area, sep = "\\|")
# custom_aggregate <- function(x) {
#   return(paste(unique(x), collapse = "|"))
# }
# drug_usi_aggregate <- drug_area_separate %>%
#   group_by(short_usi) %>%
#   summarise_all(custom_aggregate)


unique_disease_area <- unique(drug_human_disease_metadata_filtered$Kine_broad_disease_area)
custom_aggregate <- function(x) {
  return(paste(unique(x), collapse = "_"))
}
drug_usi_aggregate <- drug_human_disease_metadata_filtered %>%
  group_by(short_usi) %>%
  summarise_all(custom_aggregate)




result <- data.frame(matrix(FALSE, nrow = nrow(drug_usi_aggregate), ncol = length(unique_disease_area)))
colnames(result) <- unique_disease_area
rownames(result) <- drug_usi_aggregate$short_usi

drug_usi_aggregate$Kine_broad_disease_area_fixed <- paste0("_", drug_usi_aggregate$Kine_broad_disease_area, "_")

for(i in 1:nrow(result)){
  for (j in 1:ncol(result)){
    if(grepl(paste0("_", unique_disease_area[j], "_"), drug_usi_aggregate$Kine_broad_disease_area_fixed[drug_usi_aggregate$short_usi == rownames(result)[i]], fixed = TRUE)){
      result[i,j] <- TRUE
    }
  }
}

result_filtered <- result %>% rownames_to_column("short_usi") %>% left_join(drug_usi_aggregate %>% dplyr::select(c("short_usi", "disease_bodypart")), by = "short_usi")
result_freq_per_area <- result_filtered %>%
  dplyr::select(-"short_usi") %>%
  group_by(disease_bodypart) %>%
  summarise(across(everything(), ~ sum(. == TRUE) / n(), .names = "ratio_{col}")) %>%
  column_to_rownames("disease_bodypart")

a <- apply(result_freq_per_area, 2, function(column) any(column > 0.3))
sum(a)
result_freq_filtered <- result_freq_per_area[,a]
colnames(result_freq_filtered)

heatmap_data <- as.matrix(result_freq_filtered[c("inflammatory bowel disease | feces", "Kawasaki disease | blood plasma", "dental caries | saliva", "COVID-19 | blood plasma",
                                       "psoriasis | arm skin", "psoriasis | head or neck skin", "psoriasis | skin of trunk",
                                       "acquired immunodeficiency syndrome | blood plasma", "human immunodeficiency virus infectious disease | blood plasma",
                                       "Alzheimer's disease | blood plasma", "Alzheimer's disease | cerebrospinal fluid", "Alzheimer's disease | brain", "Alzheimer's disease | feces",
                                       "Crohn's disease | feces", 
                                       "diabetes mellitus | feces", "diabetes mellitus | urine", "hypertension | urine", "obesity | saliva", "primary bacterial infectious disease | feces",
                                       "primary bacterial infectious disease | nasal cavity", "primary bacterial infectious disease | saliva", "primary bacterial infectious disease | skin of trunk",
                                       "ulcerative colitis | feces"),
                                      c("ratio_antibiotics", "ratio_antifungals", "ratio_antivirals", "ratio_cardiology", 
                                        "ratio_antidepressants", "ratio_cannabinoid", "ratio_nonsteroidal anti-inflammatory drug", "ratio_other neurology/psychiatry",   
                                        "ratio_gastroenterology",
                                        "ratio_corticosteroids", 
                                        "ratio_antiseptic and disinfectant", 
                                        "ratio_ophthalmology|dental", "ratio_anti-parasite|cardiology")])
col_fun <- colorRamp2(c(0, 0.5, 1), c("#336699", "#FFFF99", "#FF3333"))
masst_disease_heatmap <- 
  Heatmap(heatmap_data, name = "Detection_Frequency", col = col_fun, 
          cluster_rows = F, cluster_columns = F, rect_gp = gpar(col = "lightgray", lwd = 1), row_names_side = "right")
heatmap_ggplot <- as.ggplot(grid.grabExpr(draw(masst_disease_heatmap)))
ggsave(file="drug_disease_area_masst_heatmap.svg", plot=heatmap_ggplot, width=10, height=8)


# normalized by sample number in each category
result_filtered <- result %>% rownames_to_column("short_usi") %>% left_join(drug_usi_aggregate %>% dplyr::select(c("short_usi", "disease_bodypart")), by = "short_usi")
result_detection_per_area <- result_filtered %>%
  dplyr::select(-"short_usi") %>%
  group_by(disease_bodypart) %>%
  summarize(across(everything(), ~ sum(. == TRUE), .names = "{col}")) %>%
  column_to_rownames("disease_bodypart")

sample_number <- as.data.frame(table(redu_human_disease_filtered$disease_bodypart))

result_freq <- result_detection_per_area
for(i in 1:nrow(result_detection_per_area)){
  result_freq[i,] <- result_detection_per_area[i,]/(sample_number$Freq[sample_number$Var1 == rownames(result_detection_per_area)[i]])
}

a <- apply(result_freq, 2, function(column) any(column > 0.1))
sum(a)
result_freq_filtered <- result_freq[,a]

rownames(result_freq_filtered)

heatmap_data <- as.matrix(result_freq_filtered[c("inflammatory bowel disease | feces", "Kawasaki disease | blood plasma", "dental caries | saliva", "COVID-19 | blood plasma",
                                                 "psoriasis | arm skin", "psoriasis | head or neck skin", "psoriasis | skin of trunk",
                                                 "acquired immunodeficiency syndrome | blood plasma", "human immunodeficiency virus infectious disease | blood plasma",
                                                 "Alzheimer's disease | blood plasma", "Alzheimer's disease | cerebrospinal fluid", "Crohn's disease | feces", 
                                                 "diabetes mellitus | feces", "diabetes mellitus | urine", "hypertension | urine", "obesity | saliva", "primary bacterial infectious disease | feces",
                                                 "primary bacterial infectious disease | nasal cavity", "primary bacterial infectious disease | saliva", "primary bacterial infectious disease | skin of trunk",
                                                 "ulcerative colitis | feces"),
                                               c("antibiotics", "antifungals", "antivirals", "cardiology", 
                                                 "neurology/psychiatry", "gastroenterology", "corticosteroids",
                                                 "rheumatology", "dermatology", "pulmonary", "antiseptic and disinfectant", 
                                                 "ophthalmology", "dental")])

library(pheatmap)
pheatmap(heatmap_data, cluster_rows =  F, cluster_cols = F)

col_fun <- colorRamp2(c(0, 0.5, 1), c("#336699", "#FFFF99", "#FF3333"))
masst_disease_heatmap <- 
  Heatmap(heatmap_data, name = "Detection_Frequency", col = col_fun, 
             cluster_rows = F, cluster_columns = F, rect_gp = gpar(col = "lightgray", lwd = 1), row_names_side = "right")
heatmap_ggplot <- as.ggplot(grid.grabExpr(draw(masst_disease_heatmap)))
ggsave(file="drug_disease_area_masst_heatmap.svg", plot=heatmap_ggplot, width=10, height=8)



# # with analogs by FDA class
# drug_masst <- read.csv("application/drug_in_masst/20240124_druglib_analogoff_match_file_paste_together_python.csv")
# suspect_masst <- read.csv("application/drug_in_masst/20240309_drug_suspectlib_masst_match_file_paste_together_python.csv")
# analog_masst <- read.csv("application/drug_in_masst/20240305_drug_analoglib_masst_match_file_paste_together_python.csv")
# drug_masst <- rbind(drug_masst, suspect_masst)
# drug_masst <- rbind(drug_masst, analog_masst)
# 
# drug_masst_filtered <- drug_masst %>% dplyr::select(colnames(drug_masst)[-1]) %>%
#   dplyr::filter(!grepl("MSV000084314|MSV000089210", drug_masst$USI)
#                 & drug_masst$Cosine >= 0.8
#                 & drug_masst$Matching.Peaks >= 6
#                 & drug_masst$Delta.Mass == 0.00) %>%
#   dplyr::select(c("USI", "GNPSID"))
# drug_masst_filtered$short_usi <- sub(":scan.*", "", drug_masst_filtered$USI)
# drug_masst_filtered <- drug_masst_filtered[,c("short_usi", "GNPSID")]
# colnames(drug_masst_filtered) <- c("short_usi", "drug_GNPSID")
# rm(drug_masst)
# 
# redu <- read.csv("application/drug_in_masst/all_redu_sample_information.tsv", sep = "\t")
# redu_gnps <- redu %>% dplyr::filter(redu$DataSource == "GNPS")
# rm(redu)
# extract_parts <- function(x) {
#   part1 <- str_extract(x, ".*:")
#   part2 <- str_extract(x, "(?<=/)[^/]+(?=\\.)")
#   result <- paste0(part1, part2)
#   return(result)
# }
# redu_gnps_short_usi <- redu_gnps %>% mutate(short_usi = sapply(USI, extract_parts))
# redu_human_disease <- redu_gnps_short_usi %>% dplyr::filter(grepl("Homo", redu_gnps_short_usi$NCBITaxonomy) & redu_gnps_short_usi$DOIDCommonName != "missing value")
# redu_human_disease_filtered <- redu_human_disease %>% dplyr::select(c("short_usi", "DOIDCommonName", "UBERONBodyPartName"))
# redu_human_disease_filtered$disease_bodypart <- paste0(redu_human_disease_filtered$DOIDCommonName, " | ", redu_human_disease_filtered$UBERONBodyPartName) 
# 
# drug_masst_disease_redu <- drug_masst_filtered %>% inner_join(redu_human_disease_filtered, by = "short_usi")
# 
# drug_metadata <- read_xlsx("application/druglib_metadata/20240510_druglib_metadata_simple_R3_DMIM.xlsx")
# analog_metadata <- read.csv("application/druglib_metadata/20240430_drug_suspect_analoglib_metadata_combined_filtered_FINAL.csv")
# drug_metadata_nodup <- drug_metadata[!duplicated(drug_metadata$gnps_libid),]
# drug_metadata_selected <- drug_metadata_nodup %>% dplyr::select(c("gnps_libid", "cleanup_name", "chemical_source", "Kine_FDA_drug_class",
#                                                                   "Kine_broad_disease_area", "Kine_broad_indication", "Kine_broad_moa"))
# analog_metadata_selected <- analog_metadata %>% dplyr::select(c("analog_ccmsid", "analog_name", "chemical_source", "Kine_FDA_drug_class",
#                                                                 "Kine_broad_disease_area", "Kine_broad_indication", "Kine_broad_moa"))
# colnames(analog_metadata_selected) <- colnames(drug_metadata_selected)
# drug_metadata_selected <- rbind(drug_metadata_selected, analog_metadata_selected)
# 
# drug_human_disease_metadata <- drug_masst_disease_redu %>% left_join(drug_metadata_nodup, by = c("drug_GNPSID" = "gnps_libid"))
# drug_human_disease_metadata_filtered <- drug_human_disease_metadata %>%
#   dplyr::filter(!grepl("QAQC|Low|Endoge|Food", drug_human_disease_metadata$chemical_source)
#                 & !grepl("NA|no_match", drug_human_disease_metadata$Kine_FDA_drug_class)
#                 & !is.na(drug_human_disease_metadata$Kine_FDA_drug_class))
# 
# a <- unique(drug_human_disease_metadata_filtered$Kine_FDA_drug_class)
# b <- strsplit(a, "\\|")
# c <- unlist(b)
# unique_FDA_class <- unique(c)
# 
# drug_FDA_separate <- tidyr::separate_rows(drug_human_disease_metadata_filtered, Kine_FDA_drug_class, sep = "\\|")
# custom_aggregate <- function(x) {
#   return(paste(unique(x), collapse = "|"))
# }
# drug_usi_aggregate <- drug_FDA_separate %>%
#   group_by(short_usi) %>%
#   summarise_all(custom_aggregate)
# 
# result <- data.frame(matrix(FALSE, nrow = nrow(drug_usi_aggregate), ncol = length(unique_FDA_class)))
# colnames(result) <- unique_FDA_class
# rownames(result) <- drug_usi_aggregate$short_usi
# 
# for(i in 1:nrow(result)){
#   for (j in 1:ncol(result)){
#     if(grepl(unique_FDA_class[j], drug_usi_aggregate$Kine_FDA_drug_class[drug_usi_aggregate$short_usi == rownames(result)[i]], fixed = T)){
#       result[i,j] <- TRUE
#     }
#   }
# }
# 
# result_filtered <- result %>% rownames_to_column("short_usi") %>% left_join(drug_usi_aggregate %>% dplyr::select(c("short_usi", "disease_bodypart")), by = "short_usi")
# result_freq_per_FDA <- result_filtered %>%
#   dplyr::select(-"short_usi") %>%
#   group_by(disease_bodypart) %>%
#   summarize(across(everything(), ~ sum(. == TRUE) / n(), .names = "ratio_{col}")) %>%
#   column_to_rownames("disease_bodypart")
# 
# a <- apply(result_freq_per_FDA, 2, function(column) any(column > 0.2))
# sum(a)
# result_freq_FDA_filtered <- result_freq_per_FDA[,a]
# 
# library(pheatmap)
# pheatmap(result_freq_FDA_filtered)


# # acetaminophen for Ipsita
# drug_masst <- read.csv("application/drug_in_masst/20240124_druglib_analogoff_match_file_paste_together_python.csv")
# drug_metadata <- read_xlsx("application/druglib_metadata/20240510_druglib_metadata_simple_R3_DMIM.xlsx")
# drug_metadata_nodup <- drug_metadata[!duplicated(drug_metadata$gnps_libid),]
# acetaminophen <- drug_metadata_nodup %>% dplyr::filter(grepl("acetaminophen|paracetamol|Paracetamol|Acetaminophen", drug_metadata_nodup$cleanup_name) |
#                                                          drug_metadata_nodup$smiles == "CC(=O)Nc1ccc(O)cc1" |
#                                                          drug_metadata_nodup$inchikey == "RZVAJINKPMORJF-UHFFFAOYSA-N")
# drug_masst_acetaminophen <- drug_masst %>% dplyr::filter(drug_masst$GNPSID %in% acetaminophen$gnps_libid)
# write.csv(drug_masst_acetaminophen, "application/drug_in_masst/20240812_acetaminophen_masst_to_Ipsita.csv")
# rm(drug_metadata_nodup)
